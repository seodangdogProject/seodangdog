.container {
  display: flex;
  justify-content: center; /* 수평 가운데 정렬 */
  align-items: center; /* 수직 가운데 정렬 */
  max-width: 100%;
  height: 100vh;
  background-color: #ffffff;
  font-family: "NanumMyeongjo";
  min-width: 1000px;
}

.content_cotainer {
  font-family: "NanumMyeongjo";
  border-radius: 20px;
  display: flex;
  flex-direction: column; /* 요소들을 세로로 정렬하기 위해 column으로 설정 */
  width: 90%;
  height: 90%;
  background-color: rgba(240, 244, 255, 1);
  justify-content: spa;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.08);
}

.header_container {
  /* padding-top: 30px; */
  display: flex;
  justify-content: center; /* 수평 가운데 정렬 */
  align-items: center; /* 수직 가운데 정렬 */
  height: 20%;
  font-family: "Pretendard-Regula";
  color: rgba(0, 7, 67, 1);
  font-size: 40px;
  font-weight: 800;
  margin: auto;
}

.count_container {
  font-size: 20px;
  font-family: "NanumMyeongjo";
  font-weight: 900;
  width: 80px;
  height: 3%;
  border-radius: 30px;
  padding: 20px;
  background-color: white;
  margin-left: auto;
  margin-right: 50px;
  display: flex;
  justify-content: center; /* 수평 가운데 정렬 */
  align-items: center; /* 수직 가운데 정렬 */
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
}

.meaning_container {
  font-family: "NanumMyeongjo";
  display: flex;
  font-weight: 900;
  border-radius: 20px;
  justify-content: center; /* 수평 가운데 정렬 */
  align-items: center; /* 수직 가운데 정렬 */
  text-align: center;
  height: 20%;
  width: 70%;
  background-color: white;
  border: 2px solid black;
  margin: auto;
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
}

.language {
  border-radius: 10px;
  margin: 10px;
  background-color: pink;
  width: 35px;
  margin-left: 200px;
  padding: 10px;
  letter-spacing: 1px;
  text-align: center;
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
}

.meaning_des {
  font-size: 40px;
  padding: 20px;
  justify-content: center; /* 수평 가운데 정렬 */
  align-items: center; /* 수직 가운데 정렬 */
  text-align: center;
  display: flex;
  line-height: 1.5;
}

.answer_conatiner {
  /* background-color: aqua; */
  height: 20%;
  display: flex;
  /* max-width: 500px; */
  margin-left: 100px;
  margin-right: 100px;
  margin-top: 20px;
  align-self: center; /* 자기 자신을 수직 가운데 정렬 */
  text-align: center; /* 내용을 수평 가운데 정렬 */
  justify-content: space-between; /* 간격 조절 */
}

.characterBox {
  border-radius: 10px;
  flex: 1; /* 각 요소가 동일한 공간을 차지하도록 함 */
  align-items: center;

  /* 요소의 너비와 높이를 동일하게 설정하여 정사각형으로 만듭니다. */
  width: 50px; /* 예시로 너비를 100px로 설정합니다. */
  height: 50px; /* 너비와 동일한 높이를 설정합니다. */
  flex: 1;
  background-color: #f0f0f0;
  padding: 10px;
  /* 입력 요소가 아이템을 가득 채우도록 설정 */
  display: flex;
  align-items: center;
  margin-right: 20px;
  border: 1px solid black;
  box-shadow: 2px 2px 2px 2px gray;
}

.characterBox:last-child {
  margin-right: 0;
}

.characterBox input {
  font-family: "NanumMyeongjo";
  font-weight: 900;
  border: none;
  outline: none;
  background: none;
  font-size: 35px;
  align-items: center;
  text-align: center;
  flex: 1; /* 입력 요소가 아이템을 가득 채우도록 설정합니다. */
  width: 100%; /* 부모 요소에 대해 가득 채우기 위해 너비를 100%로 설정합니다. */
  height: 100%;
  box-sizing: border-box; /* 입력 요소의 패딩을 고려하여 전체 너비를 조정합니다. */
}

.timer {
  display: flex;
  height: 20%;
  align-items: center;
  text-align: center;
  justify-content: center;
}

@keyframes ticking {
  0% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(15deg);
  }
  50% {
    transform: rotate(0deg);
  }
  75% {
    transform: rotate(-15deg);
  }
  100% {
    transform: rotate(0deg);
  }
}

.time_icon {
  margin-right: 20px;
  margin-bottom: 10px;
  display: inline-block;
  animation: ticking 2.5s infinite linear;
}

.progress_wrapper {
  border-radius: 10px;
  width: 600px;
  height: 20px;
  /* border: 3px solid blue; */
  background-color: lightblue;
  display: flex;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* 부드러운 그림자 효과 추가 */
  overflow: hidden; /* 자식 요소가 테두리를 넘어가지 않도록 */
}

.progress_container {
  border-radius: 10px;

  background-color: pink;
  transition: width 0.5s ease; /* 부드러운 너비 변화 효과 */
  box-shadow: 0 2px 4px rgba(255, 105, 180, 0.4);
}

.progress_label {
  font-size: 20px;
  color: green;
}

.shaking {
  animation: vibration 0.1s infinite;
}

@keyframes vibration {
  from {
    transform: rotate(4deg);
  }
  to {
    transform: rotate(-4deg);
  }
}
